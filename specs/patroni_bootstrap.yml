### To be discussed
scope: &scope batman
namespace: /service/
restapi:
  listen: 127.0.0.1:8008
  connect_address: 127.0.0.1:8008
#  auth: 'username:password'
#  certfile: /etc/ssl/certs/ssl-cert-snakeoil.pem
#  keyfile: /etc/ssl/private/ssl-cert-snakeoil.key

## The bootstrap section is only evaluated once, when a new PostgreSQL
## cluster needs to be initialized.
bootstrap:
  dcs:
    ttl: &ttl 30
    loop_wait: &loop_wait 10
    use_pg_rewind: true
    use_slots: True
    postgresql:
      # recovery_conf:
      #   restore_command: cp ../wal_archive/%f %p
      parameters:
        # archive_mode: "on"
        # archive_command: mkdir -p ../wal_archive && test ! -f ../wal_archive/%f && cp %p ../wal_archive/%f
        wal_level: hot_standby
        max_wal_senders: 10
        wal_keep_segments: 8
        archive_timeout: 1800s
        max_replication_slots: 10
        hot_standby: "on"
        wal_log_hints: "on"
  initdb:  ## Note: It needs to be a list (some options need values, others are switches)
  - encoding: UTF8
  - data-checksums
  - auth-local: peer
  pg_hba:
  - host replication replicator 127.0.0.1/32 md5
  - host all all 0.0.0.0/0 md5
  # - hostssl all all 0.0.0.0/0 md5
  users:
    admin:
      password: admin
      options:
        - createrole
        - createdatabase
    &replication_username replicator
      password: &replication_password replicada
      options:
        - replication
    &superuser_username postgres:
      password: &superuser_password zalando
      options:
        - superuser
etcd:
  host: 127.0.0.1:4001
  #discovery_srv: my-etcd.domain
#consul:
#  host: 127.0.0.1:8500
#zookeeper:
#  hosts:
#    - 127.0.0.1:2181
#    - 127.0.0.2:2181
#  exhibitor:
#    poll_interval: 300
#    port: 8181
#    hosts:
#      - host1
#      - host2
#      - host3
postgresql:
  name: postgresql0
  connect_address: 127.0.0.1:5432
  listen: 127.0.0.1:5432
  data_dir: data/postgresql0
  pgpass: /tmp/pgpass0
  authentication:
    replication:
      username: *replication_username
      password: *replication_password
    superuser:
      username: *superuser_username
      password: *superuser_password
  ## You can override node specific PostgreSQL parameters here
  ## from 9.4 on it may be better to use ALTER SYSTEM
  ##
  ## Some parameters are essential for Patroni to operate, these parameters will be ignored:
  ## - listen_addresses
  ## - port
  ## - wal_level (if lower than hot_standby)
  ## - min_wal_senders = 0
  parameters:
  # work_mem: 1GB
tags:
    nofailover: False
    noloadbalance: False
    clonefrom: False
